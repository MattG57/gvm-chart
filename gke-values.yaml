# Global configuration #note: may need to specify architecture when moving images to private registry (e.g. podman pull docker.io/mgunter/github-value-mongodb:latest --arch=amd64)
global:
  storageClass: "premium-retain"  # Use premium-retain as cluster-wide default
  storageProvisioner: "pd.csi.storage.gke.io"
  storageType: "pd-ssd"
  mongodb:
    uri: ""

# MongoDB configuration
mongodb:
  auth:
    enabled: true
    rootPassword: ""
    replicaSetKey: "" # Will be auto-generated if not specified

  # Architecture config
  architecture: standalone  # Can be 'standalone' or 'replicaset'
  replicaCount: 3  # Number of secondary nodes (not counting primary)
  mongodbExtraFlags:
    - "--wiredTigerCacheSizeGB=2"

  persistence:
    enabled: true
    storageClass: "premium-retain"  # Updated for Retain PVs
    accessModes:
      - ReadWriteOnce
    size: 10Gi                    # Adjusted size
    annotations:
      helm.sh/resource-policy: keep   # Extra safety to prevent PVC deletion
    existingClaim: "gvm-release-mongodb" #create in the manage script, outside of helm?
    subPath: ""
    mountPath: /bitnami/mongodb
    volumeReclaimPolicy: Retain  

  # Metrics/Monitoring
  metrics:
    enabled: false
    serviceMonitor:
      enabled: false  # Enable if using Prometheus Operator

  # Service configuration
  service:
    type: LoadBalancer
    port: 27017

  # Pod Disruption Budget
  pdb:
    enabled: true
    minAvailable: 1

  # Affinity/Anti-affinity rules
  affinity:
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
      - weight: 100
        podAffinityTerm:
          labelSelector:
            matchLabels:
              app.kubernetes.io/name: mongodb
              app.kubernetes.io/instance: my-release
          topologyKey: kubernetes.io/hostname

  # Network Policy
  networkPolicy:
    enabled: true

  # Init containers for volume permissions
  volumePermissions:
    enabled: true

  # Backup configuration (if using Velero or other backup solutions)
  backup:
    enabled: true                 # Enable backup cronjob
    cronjob:
      storage:
        enabled: true
        storageClass: "premium-retain"
        size: 20Gi
        annotations:
          helm.sh/resource-policy: keep
      mongodb:
        useRoot: true             # Use root for backup
        secretName: "mongodb-root-secret"  # Use the same secret as for rootPassword
        resources:             # Add explicit resource requests/limits to satisfy Autopilot
          requests:
            cpu: "100m"
            memory: "128Mi"
          limits:
            cpu: "200m"
            memory: "256Mi"

  # RBAC configuration
  rbac:
    create: true

  externalAccess:
    enabled: true
    service:
      type: LoadBalancer
      port: 27017
      loadBalancerIPs: []
    autoDiscovery:
      enabled: true

  # Value App Chart Configuration
value-app-chart:
  name: github-value-chart
  version: 0.1.0
  appVersion: 0.1
  deployment:
  kubernetesEnvironment: gke  # Possible values: gke, dockerdesktop, openshift, aks 

  # General settings
  replicaCount: 1  # Number of replicas for the Deployment
  namespace: default  # Kubernetes namespace where the Deployment will be created

  # Primary application container (frontend/backend)
  app:
    image:
      repository: mgunter/github-value-mongodb30 # prompted for in the manage script and then set as an override to this value
      tag: "latest"
      pullPolicy: IfNotPresent
    name: github-value
    command: ["sh", "-c", "cd /app/backend && npm run start"]
    #cd /app/backend/dist && node index.js | ../node_modules/.bin/bunyan -o short -l info"]
    #  command: ["sh", "-c", "sleep infinity"]
    volumes:
      - name: working-volume
        emptyDir: {}
    volumeMounts:
      - name: working-volume
        mountPath: /app/backend/logs
    envFrom:
      - configMapRef:
          name: github-value-config
      - secretRef:
          name: github-value-secret
    configKey: config-value
    resources:
      requests:
        cpu: "1"
        memory: "2Gi"
      limits:
        cpu: "4"
        memory: "6Gi"

  # Sidecar container settings
  poller:
    enabled: true
    name: "mongodb-poller"
    image: mongo:6
    command: ["sh", "-c", "echo \"Testing MongoDB connection using MONGODB_URI\"; until mongosh \"${MONGODB_URI}\" --eval \"db.runCommand({ping:1})\" > /dev/null; do echo \"waiting for mongodb\"; sleep 5; done"]
    envFrom:
      - configMapRef:
          name: github-value-config
      - secretRef:
          name: github-value-secret
    resources:
      requests:
        cpu: "500m"
        memory: "200Mi"
      limits:
        cpu: "2"
        memory: "4Gi"

  autoscaling:
    enabled: true
    minReplicas: 1     

  # Service configuration
  service:
    type: LoadBalancer
    protocol: TCP
    port: 80
    targetPort: 8080 # must match PORT config value, PORT is prompted for in the manage script and then set as an override to this value
    nodePort: 30080

  # MongoDB connection settings
  mongodb:
    service:
      name: gvm-release-mongodb

  securityContext:
    runAsGroup: 1001
    runAsUser: 1001      

  # Service Account configuration
  serviceAccount:
    create: true
    name: custom-sa-name
    automount: true
    annotations:
      example-annotation: value

  # Pod Security Context
  podSecurityContext:
    fsGroup: 1001
    runAsGroup: 1001
    runAsUser: 1001
